name: Promote Build
on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App to promote'
        required: true
        type: choice
        options:
          - python-fast-api
          - node-backed-api
      source_env:
        description: 'Source environment'
        required: true
        type: choice
        options:
          - test
          - qa
          - prod
      target_env:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - test
          - qa
          - prod

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get source tag
        id: get_tag
        run: |
          CURRENT_TAG=$(yq eval '.key.components[] | select(.name == "${{ inputs.app_name }}") | .appImageTagName' environments/${{ inputs.target_env }}/applist.yaml)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Promoting ${{ inputs.app_name }}: $TAG"
          
      - name: check target environment
        run: |
          CURRENT_TAG=$(yq eval '.key.components[] | select(.name == "${{ inputs.app_name }}") | .appImageTagName' environments/${{ inputs.target_env }}/applist.yaml)
          
          if [[ "$CURRENT_TAG" == "${{ steps.get_tag.outputs.tag }}" ]]; then
            echo "No changes needed - tag already matches"
            echo "has_changes=false" >> $GITHUB_ENV
          else
            sed -i "/- name: ${{ inputs.app_name }}/,/<<: \*defaultValues/ s/appImageTagName: $CURRENT_TAG/appImageTagName: ${{ steps.get_tag.outputs.tag }}/" environments/${{ inputs.target_env }}/applist.yaml
            echo "has_changes=true" >> $GITHUB_ENV
          fi
          
      - name: Commit changes
        if: env.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add environments/${{ inputs.target_env }}/applist.yaml
          git commit -m "Promote ${{ inputs.app_name }} from ${{ inputs.source_env }} to ${{ inputs.target_env }}: ${{ steps.get_tag.outputs.tag }}"
          git push
          
      - name: No changes summary
        if: env.has_changes == 'false'
        run: echo "No promotion needed - ${{ inputs.app_name }} already has tag ${{ steps.get_tag.outputs.tag }} in ${{ inputs.target_env }}"